
services:
  redis:
    image: redis:7-alpine
    container_name: raptor-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./config/redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3
    networks:
      - raptor-network

  raptor-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: raptor-app
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - RAPTOR_ENV=production
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - SERVER_HOST=0.0.0.0
      - SERVER_PORT=8000
    volumes:
      - ./vectordb:/app/vectordb:ro
      - ./logs:/app/logs
      - ./config:/app/config:ro
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8000/health', timeout=5)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - raptor-network

  prometheus:
    image: prom/prometheus:latest
    container_name: raptor-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=30d'
    networks:
      - raptor-network

  grafana:
    image: grafana/grafana:latest
    container_name: raptor-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - raptor-network

volumes:
  redis_data:
  prometheus_data:
  grafana_data:

networks:
  raptor-network:
    driver: bridge